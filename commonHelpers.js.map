{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet startDate = 0;\nconst btnStart = document.querySelector('[data-start]');\nconst inputWindow = document.querySelector('#datetime-picker');\nconst daysCountdown = document.querySelector('[data-days]');\nconst hoursCountdown = document.querySelector('[data-hours]');\nconst minutesCountdown = document.querySelector('[data-minutes]');\nconst secondsCountdown = document.querySelector('[data-seconds]');\n\nbtnStart.disabled = true;\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate < Date.now()) {\n      displayErrorMessage('Please choose date in the future');\n      selectedDates[0] = Date.now();\n      btnStart.disabled = true;\n    } else {\n      startDate = selectedDate;\n      btnStart.disabled = false;\n    }\n  },\n});\n\nbtnStart.addEventListener('click', startCountdown);\n\nfunction startCountdown() {\n  btnStart.disabled = true;\n  inputWindow.disabled = true;\n  const timerId = setInterval(updateTimer, 1000);\n\n  function updateTimer() {\n    const diff = startDate - Date.now();\n    if (diff <= 0) {\n      clearInterval(timerId);\n      resetTimerValues();\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    displayTimerValues(days, hours, minutes, seconds);\n  }\n}\n\nfunction displayTimerValues(days, hours, minutes, seconds) {\n  daysCountdown.textContent = addZero(days);\n  hoursCountdown.textContent = addZero(hours);\n  minutesCountdown.textContent = addZero(minutes);\n  secondsCountdown.textContent = addZero(seconds);\n}\n\nfunction resetTimerValues() {\n  displayTimerValues(0, 0, 0, 0);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = 60 * second;\n  const hour = 60 * minute;\n  const day = 24 * hour;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nconst addZero = value => {\n  return value.toString().padStart(2, '0');\n};\n\nfunction displayErrorMessage(message) {\n  iziToast.error({\n    message: message,\n  });\n}\n"],"names":["startDate","btnStart","inputWindow","daysCountdown","hoursCountdown","minutesCountdown","secondsCountdown","flatpickr","selectedDates","selectedDate","displayErrorMessage","startCountdown","timerId","updateTimer","diff","resetTimerValues","days","hours","minutes","seconds","convertMs","displayTimerValues","addZero","ms","value","message","iziToast"],"mappings":"iyBAKA,IAAIA,EAAY,EAChB,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAgB,SAAS,cAAc,aAAa,EACpDC,EAAiB,SAAS,cAAc,cAAc,EACtDC,EAAmB,SAAS,cAAc,gBAAgB,EAC1DC,EAAmB,SAAS,cAAc,gBAAgB,EAEhEL,EAAS,SAAW,GAEpBM,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,EAAe,KAAK,OACtBC,EAAoB,kCAAkC,EACtDF,EAAc,CAAC,EAAI,KAAK,IAAG,EAC3BP,EAAS,SAAW,KAEpBD,EAAYS,EACZR,EAAS,SAAW,GAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAASU,CAAc,EAEjD,SAASA,GAAiB,CACxBV,EAAS,SAAW,GACpBC,EAAY,SAAW,GACvB,MAAMU,EAAU,YAAYC,EAAa,GAAI,EAE7C,SAASA,GAAc,CACrB,MAAMC,EAAOd,EAAY,KAAK,IAAG,EACjC,GAAIc,GAAQ,EAAG,CACb,cAAcF,CAAO,EACrBG,IACA,MACD,CACD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAI,EACxDO,EAAmBL,EAAMC,EAAOC,EAASC,CAAO,CACjD,CACH,CAEA,SAASE,EAAmBL,EAAMC,EAAOC,EAASC,EAAS,CACzDhB,EAAc,YAAcmB,EAAQN,CAAI,EACxCZ,EAAe,YAAckB,EAAQL,CAAK,EAC1CZ,EAAiB,YAAciB,EAAQJ,CAAO,EAC9CZ,EAAiB,YAAcgB,EAAQH,CAAO,CAChD,CAEA,SAASJ,GAAmB,CAC1BM,EAAmB,EAAG,EAAG,EAAG,CAAC,CAC/B,CAEA,SAASD,EAAUG,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,MAAMD,EAAUE,GACPA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAGzC,SAASd,EAAoBe,EAAS,CACpCC,EAAS,MAAM,CACb,QAASD,CACb,CAAG,CACH"}